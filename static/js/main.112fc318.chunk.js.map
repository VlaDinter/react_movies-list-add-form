{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleIsValid","descriptionIsValid","imgUrlIsValid","imdbUrlIsValid","imdbIdIsValid","handleSubmit","evt","preventDefault","props","onAdd","setState","handleChange","target","id","value","chackValidity","test","onSubmit","this","htmlFor","type","placeholder","style","borderColor","onChange","onBlur","required","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.112fc318.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleIsValid: true,\n    descriptionIsValid: true,\n    imgUrlIsValid: true,\n    imdbUrlIsValid: true,\n    imdbIdIsValid: true,\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    this.props.onAdd({\n      title, description, imgUrl, imdbUrl, imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.id]: evt.target.value,\n    });\n  }\n\n  chackValidity = (evt) => {\n    if (evt.target.id === 'imgUrl' || evt.target.id === 'imdbUrl') {\n      const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n      this.setState({\n        [`${evt.target.id}IsValid`]: regExp.test(evt.target.value),\n      });\n    } else {\n      this.setState({\n        [`${evt.target.id}IsValid`]: evt.target.value !== '',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"sidebar__form form\" onSubmit={this.handleSubmit}>\n        <div className=\"form__input-wrapper\">\n          <label className=\"form__label\" htmlFor=\"title\">\n            {this.state.titleIsValid ? '' : 'Invalid input'}\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"input\"\n            value={this.state.title}\n            placeholder=\"Title\"\n            id=\"title\"\n            style={{\n              borderColor: this.state.titleIsValid ? '' : 'red',\n            }}\n            onChange={this.handleChange}\n            onBlur={this.chackValidity}\n            required\n          />\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <label\n            className=\"form__label\"\n            htmlFor=\"description\"\n          >\n            {this.state.descriptionIsValid ? '' : 'Invalid input'}\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"input\"\n            value={this.state.description}\n            placeholder=\"Description\"\n            id=\"description\"\n            style={{\n              borderColor: this.state.descriptionIsValid ? '' : 'red',\n            }}\n            onChange={this.handleChange}\n            onBlur={this.chackValidity}\n            required\n          />\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <label className=\"form__label\" htmlFor=\"imgUrl\">\n            {this.state.imgUrlIsValid ? '' : 'Invalid input'}\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"input\"\n            value={this.state.imgUrl}\n            placeholder=\"Img url\"\n            id=\"imgUrl\"\n            style={{\n              borderColor: this.state.imgUrlIsValid ? '' : 'red',\n            }}\n            onChange={this.handleChange}\n            onBlur={this.chackValidity}\n            required\n          />\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <label className=\"form__label\" htmlFor=\"imdbUrl\">\n            {this.state.imdbUrlIsValid ? '' : 'Invalid input'}\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"input\"\n            value={this.state.imdbUrl}\n            placeholder=\"Imdb url\"\n            id=\"imdbUrl\"\n            style={{\n              borderColor: this.state.imdbUrlIsValid ? '' : 'red',\n            }}\n            onChange={this.handleChange}\n            onBlur={this.chackValidity}\n            required\n          />\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <label className=\"form__label\" htmlFor=\"imdbId\">\n            {this.state.imdbIdIsValid ? '' : 'Invalid input'}\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"input\"\n            value={this.state.imdbId}\n            placeholder=\"Imdb id\"\n            id=\"imdbId\"\n            style={{\n              borderColor: this.state.imdbIdIsValid ? '' : 'red',\n            }}\n            onChange={this.handleChange}\n            onBlur={this.chackValidity}\n            required\n          />\n        </div>\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n          disabled={\n            !this.state.title || !this.state.description\n            || !this.state.imgUrl || !this.state.imdbUrl\n            || !this.state.imdbId || !this.state.imgUrlIsValid\n            || !this.state.imdbUrlIsValid\n          }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}